{"version":3,"file":"component---src-pages-index-mdx-aeeb4b1e15e1cdf77260.js","mappings":"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","sources":["webpack://demo/./src/pages/index.mdx","webpack://demo/../@pauliescanlon/gatsby-theme-terminal/src/layouts/page-layout.js","webpack://demo/../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kai/syncthing/sync/current/jst-presto-2021-accessibility/web/accessible-iot-source/@pauliescanlon/gatsby-theme-terminal/src/layouts/page-layout.js\";\nimport { format } from 'date-fns';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Grid = makeShortcode(\"Grid\");\nconst SiteMetaData = makeShortcode(\"SiteMetaData\");\nconst Fragment = makeShortcode(\"Fragment\");\nconst Heading = makeShortcode(\"Heading\");\nconst Alert = makeShortcode(\"Alert\");\nconst Box = makeShortcode(\"Box\");\nconst Link = makeShortcode(\"Link\");\nconst SourceTags = makeShortcode(\"SourceTags\");\nconst Flex = makeShortcode(\"Flex\");\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Grid sx={{\n      mb: 6\n    }} mdxType=\"Grid\">\n      <SiteMetaData mdxType=\"SiteMetaData\">\n  {siteMetadata => {\n          const {\n            name,\n            description\n          } = siteMetadata;\n          return <Fragment mdxType=\"Fragment\">\n        <Heading variant=\"styles.h1\" mdxType=\"Heading\">{name}</Heading>\n      </Fragment>;\n        }}\n      </SiteMetaData>\n      <Grid sx={{\n        alignItems: 'center',\n        gridTemplateColumns: 'auto 1fr'\n      }} mdxType=\"Grid\">\n      </Grid>\n      <Alert variant=\"success\" mdxType=\"Alert\"> Towards Accessibility Assessment Toolkits for the Internet of Things</Alert>\n    </Grid>\n    <Grid sx={{\n      gap: 0,\n      mb: 6\n    }} mdxType=\"Grid\">\n      <h2>{`About`}</h2>\n      <p>{`This page is an effort to provide accessibility assessment tools to the Internet of Things.`}</p>\n      <p>{`Our first effort is to work on an accessibility assessment Toolkits for Inclusive IoT Design using Onbody Sensing.`}</p>\n      <p>{`We propose to build Open Accessibility Assessment Toolkits for Inclusive IoT Design that will provide a foundation for evaluating diverse IoT services in terms of user-perceived accessibility first using on-body sensing. We provide the first steps to an Inclusive IoT architecture enabling an in-situ, dynamic system reconfiguration based on the user’s implicit feedback.`}</p>\n    </Grid>\n    <Grid sx={{\n      gap: 0,\n      mb: 6\n    }} mdxType=\"Grid\">\n      <h2>{`why toolkits?`}</h2>\n      <p>{`Currently accessibility in IoT is left to the developers and engineers of the individual IoT services and systems. Accessibility is, if at all, designed on the application level, relying on the skill and expertise of individual developers. There is no architecture or framework support for Inclusive IoT Design (e.g. guidance for vision, sound, motion or haptic designs). There are efforts for data interoperability between devices, yet sensing (activity recognition) and accessibility assessment in terms of interacting with the IoT are not covered by them.`}</p>\n      <h2>{`motivation`}</h2>\n      <p>{`Inclusive Design and Accessibility are two core concepts emphasized in nearly all 17 of the UN’s Sustainable Development Goals (see Figure 1). IoT’s universal impact has a unique potential to serve as an enabling technology for several of the SDGs such as SDG 3, 9 and 11. For IoT to fulfill its potential in advancing social good, accessibility for differently abled users would be essential. People who do not fit the idea of an “average user” (e.g. having some disabilities or being neurodiverse) can benefit immensely from the Internet of Things. For example, mainstream home automation products and services could improve the quality and reduce the cost of custom-made solutions for ambient assisted living, which has been a field of accessibility research and development for decades. However, not considering accessibility in IoT design can further exclude people with different abilities (for example, a touch screen to control the aircon or an home automation smart phone app could be even less accessible than a physical controls, if it does not follow accessibility considerations). Accessibility considerations include the UI design, the protocols and APIs, as well as the subjective user experience.`}</p>\n    </Grid>\n    <Grid sx={{\n      gridTemplateColumns: ['1fr', '1fr', '1fr 1fr']\n    }} mdxType=\"Grid\">\n      <Box mdxType=\"Box\">\n        <h2>{`Contact`}</h2>\n        <Heading variant=\"styles.h3\" sx={{\n          mb: 0\n        }} mdxType=\"Heading\">\n  Email\n        </Heading>\n        <Link href=\"mailto:kai (at) kmd.keio.ac.jp\" variant=\"styles.a\" mdxType=\"Link\">\n  kai (at) kmd.keio.ac.jp\n        </Link>\n        <Heading variant=\"styles.h3\" sx={{\n          mb: 0\n        }} mdxType=\"Heading\">\n  Homepage\n        </Heading>\n        <Link href=\"https://kaikunze.de\" variant=\"styles.a\" mdxType=\"Link\">\n  https://kaikunze.de/\n        </Link>\n      </Box>\n      <Box mdxType=\"Box\">\n        <h2>{`Top 5 tags`}</h2>\n        <SourceTags filter=\"posts\" mdxType=\"SourceTags\">\n  {tags => <Flex sx={{\n            flexDirection: 'column'\n          }} mdxType=\"Flex\">\n      {tags.splice(0, 5).sort((a, b) => b.percent - a.percent).map((tag, index) => {\n              const {\n                name,\n                count,\n                percent\n              } = tag;\n              return <Box key={index} sx={{\n                color: 'muted',\n                mb: 3,\n                svg: {\n                  fill: 'muted'\n                }\n              }} mdxType=\"Box\">\n              <Flex sx={{\n                  lineHeight: 'normal'\n                }} mdxType=\"Flex\">\n                <Text sx={{\n                    color: 'secondary',\n                    mr: 2,\n                    mb: 0\n                  }} mdxType=\"Text\">{`${name}`}</Text>\n                <Text sx={{\n                    color: 'muted'\n                  }} mdxType=\"Text\">{percent}</Text>\n                <Text sx={{\n                    color: 'error'\n                  }} mdxType=\"Text\">%</Text>\n              </Flex>\n              <Flex mdxType=\"Flex\">\n                <Box mdxType=\"Box\">{'['}</Box>\n                <Box sx={{\n                    flexBasis: '100%'\n                  }} mdxType=\"Box\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 8\" width=\"100%\" height=\"8\">\n                    <rect width={`${percent * 3}%`} height={4} />\n                  </svg>\n                </Box>\n                <Box mdxType=\"Box\"> {']'}</Box>\n              </Flex>\n            </Box>;\n            })}\n    </Flex>}\n        </SourceTags>\n      </Box>\n    </Grid>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { Fragment } from 'react'\nimport { jsx } from 'theme-ui'\nimport { Location } from '@reach/router'\nimport { ContextProvider } from '../context'\n\nimport { Seo } from '../components/seo'\nimport { Main } from '../components/main'\n\nimport { useConfig } from '../data'\n\nconst PageLayout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { name, description, keywords, siteUrl, siteImage, lang },\n    },\n  } = useConfig()\n\n  return (\n    <ContextProvider>\n      <Main>\n        <Location>\n          {({ location }) => {\n            const { pathname } = location\n            const titleTemplate = pathname.replace(/\\//gm, '')\n\n            return (\n              <Fragment>\n                <Seo\n                  type=\"website\"\n                  title={name}\n                  titleTemplate={titleTemplate}\n                  description={description}\n                  siteUrl={siteUrl}\n                  canonical={pathname}\n                  image={siteImage}\n                  path={pathname}\n                  keywords={keywords || ['']}\n                  lang={lang}\n                />\n              </Fragment>\n            )\n          }}\n        </Location>\n        {children}\n      </Main>\n    </ContextProvider>\n  )\n}\n\nexport default PageLayout\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Grid","SiteMetaData","Fragment","Heading","Alert","Box","Link","SourceTags","Flex","Text","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","sx","mb","siteMetadata","description","variant","alignItems","gridTemplateColumns","gap","href","filter","tags","flexDirection","splice","sort","a","b","percent","map","tag","index","count","key","color","svg","fill","lineHeight","mr","flexBasis","xmlns","viewBox","width","height","isMDXComponent","children","useConfig","site","keywords","siteUrl","siteImage","lang","Location","pathname","location","titleTemplate","replace","type","title","canonical","image","path","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}